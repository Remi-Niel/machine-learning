99.83% on first second, after 10 epoch of 100 steps batch_size = 150

model_m = Sequential()
model_m.add(Reshape((TIME_PERIODS, num_sensors),  input_shape=(input_shape,)))
model_m.add(Conv1D(64, 4, strides = 4, activation='relu', input_shape=(TIME_PERIODS, num_sensors)))
model_m.add(Conv1D(64, 3, strides = 3, activation='relu'))
model_m.add(Conv1D(128, 2, strides = 2, activation='relu'))
model_m.add(Conv1D(128, 2, strides = 2, activation='relu'))
model_m.add(Flatten())
model_m.add(Dense(1024))
model_m.add(Dropout(0.5))
model_m.add(Dense(num_classes, activation='softmax'))



67.6% on random second in sample, after 300 epoch of 100 steps batch_size=200

model_m = Sequential()
model_m.add(Reshape((TIME_PERIODS, num_sensors),  input_shape=(input_shape,)))
model_m.add(Conv1D(64, 4, strides = 4, activation='relu', input_shape=(TIME_PERIODS, num_sensors)))
model_m.add(Conv1D(64, 4, strides = 4, activation='relu'))
model_m.add(Conv1D(128, 4, strides = 4, activation='relu'))
model_m.add(Conv1D(128, 2, strides = 2, activation='relu'))
model_m.add(Conv1D(256, 2, strides = 2, activation='relu'))
model_m.add(Conv1D(256, 2, strides = 2, activation='relu'))
model_m.add(Conv1D(512, 2, strides = 2, activation='relu'))
model_m.add(Conv1D(512, 2, strides = 2, activation='relu'))
model_m.add(Flatten())
model_m.add(Dense(1024))
model_m.add(Dense(num_classes, activation='softmax'))
print(model_m.summary())
